sameOrNotSame
Can we string s become string t?
the question marks can be replaced with any lowercase english alphabet.

input:
4  //length of strings
???n  //string s
aman  //string t
4
aacb
aabn
4
??no
omop

output: 
Yes
No
No



public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int noOfTestCases = sc.nextInt();
        sc.nextLine();
        for(int i = 1; i <= noOfTestCases; i++){
            int length = sc.nextInt();
            sc.nextLine();
            String s1 = sc.nextLine();
            String t1 = sc.nextLine();
            System.out.println(sameOrNot(s1,t1));

        }
    }
    public static String sameOrNot(String s, String t){
        HashMap<Character, Integer> hm = new HashMap<>();
        int countQuestion = 0;
        for(int i = 0; i < t.length();i++){  //making hashmap for letters of string t
            char ch = t.charAt(i);      
            hm.put(ch,hm.getOrDefault(ch,0)+1);      
        }

        int countLeft = t.length(); //countleft as in the no of elements in the left of the hashmap

        for(int i = 0; i < s.length(); i++){ //iterating over string s
            char ch = s.charAt(i);
            if(ch=='?'){
                countQuestion++;
                continue; 
            }
            //letter hi hoga
            if(!hm.containsKey(ch) || hm.get(ch)==0){ //this means t does not contain that letter that s contains, or, the hashmap(string t) does contain that letter, but it's frequency is 0(in this case the hashmap will count it as contains==true even when freq is 0 so we put that condition to check if freq is 0)
                return "No";
            }
            
            else{    // if(hm.containsKey(ch) && hm.get(ch) > 0)
                hm.put(ch,hm.get(ch)-1);
                countLeft--;
            }

        }
        if(countLeft != countQuestion)return "No";
        return "Yes";

    }   

}
