Given an integer array nums, find the subarray with the largest sum, and return its sum.

Brute force O(N^2)

class Solution {
    public int maxSubArray(int[] arr) {
        int n = arr.length;
        int pfsum[] = new int[n];
        pfsum[0] = arr[0];
        for(int i = 1; i < n; i++){
            pfsum[i] = pfsum[i-1] + arr[i];
        }
    
        int maxsum = Integer.MIN_VALUE;
        for(int sp = 0; sp < n; sp++){
            for(int ep = sp; ep < n; ep++){
                int sum = 0;
                if(sp==0)sum = (pfsum[ep]);
                else{
                    sum = (pfsum[ep] - pfsum[sp-1]);
                }  
                maxsum = Math.max(sum,maxsum);
            }

        }
        return maxsum; 
    }
}



Optimised:

int sum = 0;
int ans = Integer.MIN_VALUE;
for(int i = 0; i < n; i++){
  if(sum>=0){
    sum = sum + arr[i];
  }
  else{
    sum = arr[i];
  }
  ans = Math.Max(ans,sum);

}

return ans;
